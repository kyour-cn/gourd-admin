// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"encoding/json"
)

const TableNameFileStorage = "file_storage"

// FileStorage 文件存储
type FileStorage struct {
	ID        int32  `gorm:"column:id;primaryKey;autoIncrement:true" json:"id"`
	Name      string `gorm:"column:name;not null;comment:名称" json:"name"`                         // 名称
	Key       string `gorm:"column:key;not null;comment:唯一标识" json:"key"`                         // 唯一标识
	Config    string `gorm:"column:config;comment:配置" json:"config"`                              // 配置
	IsDefault int32  `gorm:"column:is_default;not null;comment:是否默认" json:"is_default"`           // 是否默认
	Status    int32  `gorm:"column:status;not null;default:1;comment:状态 1=正常 0=停用" json:"status"` // 状态 1=正常 0=停用
}

// MarshalBinary 支持json序列化
func (m *FileStorage) MarshalBinary() (data []byte, err error) {
	return json.Marshal(m)
}

// UnmarshalBinary 支持json反序列化
func (m *FileStorage) UnmarshalBinary(data []byte) error {
	return json.Unmarshal(data, m)
}

// TableName FileStorage's table name
func (*FileStorage) TableName() string {
	return TableNameFileStorage
}
