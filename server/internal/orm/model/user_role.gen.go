// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"encoding/json"
)

const TableNameUserRole = "user_role"

// UserRole 用户角色
type UserRole struct {
	ID     int64 `gorm:"column:id;primaryKey;autoIncrement:true" json:"id"`
	UserID int64 `gorm:"column:user_id;not null;comment:用户ID" json:"user_id"` // 用户ID
	RoleID int64 `gorm:"column:role_id;not null;comment:角色ID" json:"role_id"` // 角色ID
	Role   Role  `gorm:"foreignKey:role_id;references:id" json:"role"`
}

// MarshalBinary 支持json序列化
func (m *UserRole) MarshalBinary() (data []byte, err error) {
	return json.Marshal(m)
}

// UnmarshalBinary 支持json反序列化
func (m *UserRole) UnmarshalBinary(data []byte) error {
	return json.Unmarshal(data, m)
}

// TableName UserRole's table name
func (*UserRole) TableName() string {
	return TableNameUserRole
}
